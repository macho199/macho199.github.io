{"version":3,"file":"2357e66bc6587b179c78ed88d97b6a850f40ed3d-8a1c70cf51406b59770e.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/prismjs/components/prism-css.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-json.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-tsx.js","webpack://my-gatsby-site/./src/components/TableOfContents.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-javascript.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-jsx.js","webpack://my-gatsby-site/./node_modules/@heroicons/react/24/outline/esm/HomeIcon.js","webpack://my-gatsby-site/./src/components/Layout.js","webpack://my-gatsby-site/./src/components/PostMdxProvider.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-java.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-bash.js","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js","webpack://my-gatsby-site/./node_modules/prismjs/prism.js","webpack://my-gatsby-site/./node_modules/prismjs/components/prism-typescript.js"],"sourcesContent":["(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","(function (Prism) {\n\tvar typescript = Prism.util.clone(Prism.languages.typescript);\n\tPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.tsx['parameter'];\n\tdelete Prism.languages.tsx['literal-property'];\n\n\t// This will prevent collisions between TSX tags and TS generic types.\n\t// Idea by https://github.com/karlhorky\n\t// Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\tvar tag = Prism.languages.tsx.tag;\n\ttag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n\ttag.lookbehind = true;\n}(Prism));\n","import React, { useState, useEffect } from \"react\";\n\nconst TableOfContents = ({ tableOfContents }) => {\n  const [activeId, setActiveId] = useState(\"\");\n\n  useEffect(() => {\n    if (!tableOfContents?.items) return;\n\n    // 모든 헤딩 요소들의 ID를 수집\n    const headingIds = [];\n    const collectIds = (items) => {\n      items.forEach((item) => {\n        if (item.url) {\n          headingIds.push(item.url.replace(\"#\", \"\"));\n        }\n        if (item.items) {\n          collectIds(item.items);\n        }\n      });\n    };\n    collectIds(tableOfContents.items);\n\n    // 스크롤 이벤트를 사용하여 현재 보이는 헤딩 추적\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY + 150; // 상단 여백 고려\n      let currentActiveId = \"\";\n\n      // 각 헤딩의 위치를 확인하여 현재 보이는 섹션 결정\n      for (const id of headingIds) {\n        const element = document.getElementById(id);\n        if (element) {\n          const elementTop = element.offsetTop;\n          if (elementTop <= scrollPosition) {\n            currentActiveId = id;\n          } else {\n            break;\n          }\n        }\n      }\n\n      setActiveId(currentActiveId);\n    };\n\n    // 초기 상태 설정\n    handleScroll();\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [tableOfContents]);\n\n  if (!tableOfContents || !tableOfContents.items) {\n    return null;\n  }\n\n  const renderItems = (items) => {\n    return (\n      <ul className=\"text-sm text-slate-600\">\n        {items.map((item, index) => {\n          const isActive = item.url === `#${activeId}`;\n          return (\n            <li key={index} className=\"mt-1\">\n              <a\n                href={item.url}\n                className={`block py-1 transition-all duration-200 ${\n                  isActive\n                    ? \"text-violet-700 font-semibold border-l-2 border-violet-700 pl-2 -ml-2 bg-violet-50\"\n                    : \"hover:text-violet-700 hover:pl-1 hover:-ml-1\"\n                }`}\n                dangerouslySetInnerHTML={{ __html: item.title }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  const targetId = item.url.replace(\"#\", \"\");\n                  const element = document.getElementById(targetId);\n                  if (element) {\n                    element.scrollIntoView({\n                      behavior: \"smooth\",\n                      block: \"start\",\n                    });\n                  }\n                }}\n              />\n              {item.items && (\n                <div className=\"pl-4\">{renderItems(item.items)}</div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <aside className=\"hidden lg:fixed lg:top-24 lg:left-[calc(50%+384px+2rem)] lg:w-[256px] lg:block\">\n      <nav>\n        <div className=\"mt-2\">{renderItems(tableOfContents.items)}</div>\n      </nav>\n    </aside>\n  );\n};\n\nexport default TableOfContents;\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\talias: 'language-javascript',\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n","import * as React from \"react\";\nfunction HomeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(HomeIcon);\nexport default ForwardRef;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { HomeIcon } from \"@heroicons/react/24/outline\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <header className=\"flex justify-between sm:w-full md:w-[768px] m-auto px-4 py-4\">\n        <Link className=\"flex items-center\" to=\"/\">\n          <HomeIcon className=\"w-8 h-8 text-violet-950 mr-1\"></HomeIcon>\n          <div className=\"font-bold text-2xl text-violet-950\">\n            jongseong's blog\n          </div>\n        </Link>\n        <nav className=\"flex items-center\">\n          <ul className=\"flex gap-x-2\">\n            <li className=\"font-bold text-xl text-violet-950\">\n              <Link className=\"\" to=\"/\">\n                posts\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      {children}\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport Prism from \"prismjs\";\n\n// Prism.js 테마와 언어 지원 추가\nimport \"../styles/prism-custom.css\"; // 커스텀 Gatsby 스타일 테마\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-tsx\";\nimport \"prismjs/components/prism-css\";\nimport \"prismjs/components/prism-bash\";\nimport \"prismjs/components/prism-json\";\nimport \"prismjs/components/prism-java\";\n\n// 언어별 색상 맵핑\nconst getLanguageInfo = (language) => {\n  const languageMap = {\n    javascript: {\n      color: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n      name: \"JavaScript\",\n    },\n    typescript: {\n      color: \"bg-blue-100 text-blue-800 border-blue-200\",\n      name: \"TypeScript\",\n    },\n    jsx: {\n      color: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n      name: \"JSX\",\n    },\n    tsx: {\n      color: \"bg-blue-100 text-blue-800 border-blue-200\",\n      name: \"TSX\",\n    },\n    css: {\n      color: \"bg-blue-100 text-blue-800 border-blue-200\",\n      name: \"CSS\",\n    },\n    bash: {\n      color: \"bg-gray-100 text-gray-800 border-gray-200\",\n      name: \"Bash\",\n    },\n    shell: {\n      color: \"bg-gray-100 text-gray-800 border-gray-200\",\n      name: \"Shell\",\n    },\n    json: {\n      color: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n      name: \"JSON\",\n    },\n    html: {\n      color: \"bg-orange-100 text-orange-800 border-orange-200\",\n      name: \"HTML\",\n    },\n    java: {\n      color: \"bg-red-100 text-red-800 border-red-200\",\n      name: \"Java\",\n    },\n  };\n\n  return (\n    languageMap[language] || {\n      color: \"bg-gray-100 text-gray-800 border-gray-200\",\n      name: language || \"text\",\n    }\n  );\n};\n\n// 복사 버튼 컴포넌트\nconst CopyButton = ({ code }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error(\"복사에 실패했습니다:\", err);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleCopy}\n      className=\"group relative px-3 py-1.5 rounded-md text-xs font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-violet-500/20 active:scale-95\"\n      title={copied ? \"복사 완료!\" : \"코드 복사\"}\n      style={{\n        backgroundColor: copied ? \"#8b5cf6 !important\" : \"#ffffff !important\",\n        color: copied ? \"#ffffff !important\" : \"#6b7280 !important\",\n        border: copied\n          ? \"1px solid #8b5cf6 !important\"\n          : \"1px solid #d1d5db !important\",\n        boxShadow: copied\n          ? \"0 2px 4px rgba(139, 92, 246, 0.2)\"\n          : \"0 1px 2px rgba(0, 0, 0, 0.05)\",\n        fontWeight: \"500\",\n      }}\n    >\n      {copied ? (\n        <span className=\"flex items-center gap-1.5\">\n          <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <span className=\"hidden sm:inline\">복사됨</span>\n        </span>\n      ) : (\n        <span className=\"flex items-center gap-1.5\">\n          <svg\n            className=\"w-3.5 h-3.5 group-hover:scale-110 transition-transform\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1.5}\n              d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n            />\n          </svg>\n          <span className=\"hidden sm:inline\">복사</span>\n        </span>\n      )}\n    </button>\n  );\n};\n\nconst components = {\n  h2: (props) => {\n    const id = props.children\n      .replace(/\\s/g, \"-\")\n      .replace(/\\//g, \"\")\n      .toLowerCase();\n    return (\n      <h2\n        className=\"mt-12 text-3xl text-violet-900 font-semibold\"\n        id={id}\n        {...props}\n      />\n    );\n  },\n  h3: (props) => {\n    const id = props.children\n      .replace(/\\s/g, \"-\")\n      .replace(/\\//g, \"\")\n      .toLowerCase();\n    return (\n      <h3\n        className=\"mt-7 text-2xl text-violet-900 font-semibold\"\n        id={id}\n        {...props}\n      />\n    );\n  },\n  a: (props) => <a className=\"text-violet-900 hover:underline\" {...props} />,\n  p: (props) => <p className=\"mt-4 text-base leading-7\" {...props} />,\n  blockquote: (props) => (\n    <blockquote\n      className=\"mt-4 border-l-4 border-slate-200 pl-4 italic\"\n      {...props}\n    />\n  ),\n  hr: (props) => <hr className=\"my-8 border-t border-slate-200\" {...props} />,\n  ul: (props) => (\n    <ul className=\"mt-4 pl-5 list-disc text-base leading-7\" {...props} />\n  ),\n  ol: (props) => <ol className=\"mt-4 list-decimal list-inside\" {...props} />,\n  li: (props) => <li className=\"mt-2\" {...props} />,\n  pre: (props) => {\n    const { children, className } = props;\n\n    let language = \"text\";\n    let codeText = \"\";\n\n    // 더 강력한 언어 추출 로직\n    const extractLanguageAndCode = (element) => {\n      if (React.isValidElement(element)) {\n        // code 요소의 className에서 언어 추출\n        if (element.props?.className) {\n          const match = element.props.className.match(/language-(\\w+)/);\n          if (match) {\n            return { language: match[1], found: true };\n          }\n        }\n\n        // 재귀적으로 children 확인\n        if (element.props?.children) {\n          const childResult = extractLanguageAndCode(element.props.children);\n          if (childResult.found) {\n            return childResult;\n          }\n        }\n      } else if (Array.isArray(element)) {\n        for (const child of element) {\n          const result = extractLanguageAndCode(child);\n          if (result.found) {\n            return result;\n          }\n        }\n      }\n\n      return { language: \"text\", found: false };\n    };\n\n    // 언어 추출 시도\n    const result = extractLanguageAndCode(children);\n    if (result.found) {\n      language = result.language;\n    }\n\n    // className에서도 확인 (fallback)\n    if (language === \"text\" && className) {\n      const match = className.match(/language-(\\w+)/);\n      if (match) {\n        language = match[1];\n      }\n    }\n\n    // 코드 텍스트 추출\n    const extractCode = (element) => {\n      if (typeof element === \"string\") {\n        return element;\n      } else if (React.isValidElement(element)) {\n        if (element.props?.children) {\n          return extractCode(element.props.children);\n        }\n      } else if (Array.isArray(element)) {\n        return element.map(extractCode).join(\"\");\n      }\n      return \"\";\n    };\n\n    codeText = extractCode(children);\n\n    const languageInfo = getLanguageInfo(language);\n\n    return (\n      <div className=\"my-8 rounded-lg overflow-hidden border border-gray-200 shadow-lg hover:shadow-xl transition-shadow duration-300\">\n        {/* 헤더 */}\n        <div\n          className=\"bg-gradient-to-r from-gray-50 to-gray-100 px-4 py-3 border-b border-gray-200\"\n          style={{\n            background: \"linear-gradient(to right, #f9fafb, #f3f4f6)\",\n            borderBottom: \"1px solid #e5e7eb\",\n          }}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              {/* 터미널 스타일 버튼들 */}\n              <div className=\"flex items-center gap-1.5\">\n                <div className=\"w-3 h-3 rounded-full bg-red-500 hover:bg-red-600 transition-colors cursor-pointer\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-yellow-500 hover:bg-yellow-600 transition-colors cursor-pointer\"></div>\n                <div className=\"w-3 h-3 rounded-full bg-green-500 hover:bg-green-600 transition-colors cursor-pointer\"></div>\n              </div>\n              {/* 언어 태그 */}\n              <div\n                className={`px-2.5 py-1 rounded-full text-xs font-medium border ${languageInfo.color}`}\n              >\n                <span>{languageInfo.name}</span>\n              </div>\n            </div>\n            <CopyButton code={codeText} />\n          </div>\n        </div>\n\n        {/* 코드 영역 */}\n        <div className=\"relative\" style={{ backgroundColor: \"#fafbfc\" }}>\n          <pre\n            className={`\n              relative !p-6 !text-sm !leading-relaxed !overflow-x-auto !m-0 !border-0\n              scrollbar-thin scrollbar-track-gray-100 scrollbar-thumb-gray-300\n              ${className || \"\"}\n            `}\n            style={{\n              padding: \"1.5rem !important\",\n              margin: \"0 !important\",\n              border: \"none !important\",\n              backgroundColor: \"#fafbfc !important\",\n              color: \"#24292e !important\",\n              fontSize: \"15px\",\n              lineHeight: \"1.6\",\n              fontFamily:\n                \"'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace\",\n            }}\n            {...props}\n          >\n            {children}\n          </pre>\n        </div>\n      </div>\n    );\n  },\n  code: (props) => {\n    const { children, className } = props;\n\n    // 인라인 코드인지 코드 블록인지 확인\n    const isInline =\n      typeof children === \"string\" && !children.includes(\"\\n\") && !className;\n\n    if (isInline) {\n      // 인라인 코드 스타일\n      return (\n        <code\n          style={{\n            backgroundColor: \"#f1f3f4\",\n            color: \"#202124\",\n            border: \"none\",\n            fontFamily:\n              \"'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace\",\n            fontSize: \"0.85em\",\n            fontWeight: \"400\",\n            padding: \"0.1em 0.3em\",\n            borderRadius: \"3px\",\n          }}\n          {...props}\n        />\n      );\n    }\n\n    // 코드 블록 내부의 코드 (Prism.js가 처리)\n    return <code className={className} {...props} />;\n  },\n};\n\nconst PostMDXProvider = ({ children }) => {\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때 Prism.js로 하이라이팅 적용\n    Prism.highlightAll();\n  }, []);\n\n  return <MDXProvider components={components}>{children}</MDXProvider>;\n};\n\nexport default PostMDXProvider;\n","(function (Prism) {\n\n\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n\t// full package (optional) + parent classes (optional)\n\tvar classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t// based on the java naming conventions\n\tvar className = {\n\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\./\n\t\t}\n\t};\n\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\t// variables, parameters, and constructor references\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// class names based on keyword\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t'function': [\n\t\t\tPrism.languages.clike.function,\n\t\t\t{\n\t\t\t\tpattern: /(::\\s*)[a-z_]\\w*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n\t});\n\n\tPrism.languages.insertBefore('java', 'string', {\n\t\t'triple-quoted-string': {\n\t\t\t// http://openjdk.java.net/jeps/355#Description\n\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t'annotation': {\n\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t},\n\t\t'import': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'static',\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'static': /\\b\\w+$/,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'namespace': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\n\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n","(function (Prism) {\n\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t// + make sure PS1..4 are here as they are not always set,\n\t// - some useless things.\n\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\n\tvar commandAfterHeredoc = {\n\t\tpattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n\t\tlookbehind: true,\n\t\talias: 'punctuation', // this looks reasonably well in all themes\n\t\tinside: null // see below\n\t};\n\n\tvar insideString = {\n\t\t'bash': commandAfterHeredoc,\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': [\n\t\t\t// [0]: Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [1]: Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [2]: Brace expansion\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp('(\\\\{)' + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t],\n\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function-name': [\n\t\t\t// a) function foo {\n\t\t\t// b) foo() {\n\t\t\t// c) function foo() {\n\t\t\t// but not “foo {”\n\t\t\t{\n\t\t\t\t// a) and c)\n\t\t\t\tpattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// b)\n\t\t\t\tpattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t],\n\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t'for-or-select': {\n\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight variable names as variables in the left-hand part\n\t\t// of assignments (“=” and “+=”).\n\t\t'assign-left': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n\t\t\tinside: {\n\t\t\t\t'environment': {\n\t\t\t\t\tpattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'constant'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight parameter names as variables\n\t\t'parameter': {\n\t\t\tpattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t// Here-document with quotes around the tag\n\t\t\t// → No expansion (so no “inside”).\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'bash': commandAfterHeredoc\n\t\t\t\t}\n\t\t\t},\n\t\t\t// “Normal” string\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n\t\t\t\tpattern: /(^|[^$\\\\])'[^']*'/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n\t\t\t\tpattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'entity': insideString.entity\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'environment': {\n\t\t\tpattern: RegExp('\\\\$?' + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': insideString.variable,\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t'builtin': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true,\n\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'file-descriptor': {\n\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': {\n\t\t\t// Lots of redirections here, but not just that.\n\t\t\tpattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n\t\t\tinside: {\n\t\t\t\t'file-descriptor': {\n\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t'number': {\n\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tcommandAfterHeredoc.inside = Prism.languages.bash;\n\n\t/* Patterns in command substitution. */\n\tvar toBeCopied = [\n\t\t'comment',\n\t\t'function-name',\n\t\t'for-or-select',\n\t\t'assign-left',\n\t\t'parameter',\n\t\t'string',\n\t\t'environment',\n\t\t'function',\n\t\t'keyword',\n\t\t'builtin',\n\t\t'boolean',\n\t\t'file-descriptor',\n\t\t'operator',\n\t\t'punctuation',\n\t\t'number'\n\t];\n\tvar inside = insideString.variable[1].inside;\n\tfor (var i = 0; i < toBeCopied.length; i++) {\n\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t}\n\n\tPrism.languages.sh = Prism.languages.bash;\n\tPrism.languages.shell = Prism.languages.bash;\n}(Prism));\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (document.currentScript && document.currentScript.tagName === 'SCRIPT' && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n"],"names":["Prism","string","languages","css","pattern","RegExp","source","inside","lookbehind","alias","greedy","rest","markup","tag","addInlined","addAttribute","json","webmanifest","typescript","util","clone","tsx","extend","flags","_ref","tableOfContents","activeId","setActiveId","useState","useEffect","items","headingIds","collectIds","forEach","item","url","push","replace","handleScroll","scrollPosition","window","scrollY","currentActiveId","id","element","document","getElementById","offsetTop","addEventListener","removeEventListener","renderItems","React","className","map","index","isActive","key","href","dangerouslySetInnerHTML","__html","title","onClick","e","preventDefault","targetId","scrollIntoView","behavior","block","javascript","clike","insertBefore","regex","js","space","braces","spread","re","jsx","stringifyToken","token","content","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","openedBraces","plainText","splice","Token","hooks","add","env","language","HomeIcon","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","children","Link","to","CopyButton","code","copied","setCopied","async","navigator","clipboard","writeText","setTimeout","err","console","error","style","backgroundColor","color","border","boxShadow","fontWeight","fillRule","clipRule","components","h2","toLowerCase","h3","a","p","blockquote","hr","ul","ol","li","pre","codeText","extractLanguageAndCode","_element$props","_element$props2","match","found","childResult","Array","isArray","child","result","extractCode","_element$props3","languageInfo","name","bash","shell","html","java","getLanguageInfo","background","borderBottom","padding","margin","fontSize","lineHeight","fontFamily","includes","borderRadius","_ref2","MDXProvider","keywords","classNamePrefix","function","namespace","envVars","commandAfterHeredoc","insideString","entity","variable","toBeCopied","sh","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","encode","o","prototype","toString","call","slice","objId","obj","defineProperty","deepClone","visited","hasOwnProperty","v","getLanguage","m","exec","parentElement","setLanguage","classList","currentScript","Error","src","stack","scripts","getElementsByTagName","defaultActivation","no","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","highlightAllUnder","container","selector","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","currentNode","reach","str","removeCount","from","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","classes","attributes","aliases","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","self","module","exports","g","includedCdataInside","def","attrName","mathml","svg","xml","ssml","atom","rss","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","appendChild","createElement","getAttribute","extension","autoloader","loadLanguages","success","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","loadFile","range","start","Number","comma","end","undefined","parseRange","lines","split","Math","max","min","String","fileHighlight","logged","warn","arguments","keyword","typeInside","ts"],"sourceRoot":""}