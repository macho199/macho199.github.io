{"version":3,"file":"component---src-pages-posts-index-js-18641c28cacdd59c5aea.js","mappings":"2KAyBA,MADmB,cAvBnB,UAAkB,MAChBA,EAAK,QACLC,KACGC,GACFC,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKR,EACL,kBAAmBF,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DY,GAAIX,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,+OAEP,I,UCnBA,MAAMC,EAAQ,CAAC,CAAEhB,MAAO,QAASiB,KAAM,MAiCvC,MA/Be,IAAmB,IAAlB,SAAEC,GAAU,EAC1B,OACE,gCACE,0BAAQC,UAAU,gEAChB,gBAAC,EAAAC,KAAI,CAACD,UAAU,OAAOE,GAAG,KACxB,gBAAC,EAAQ,CAACF,UAAU,8CACpB,uBAAKA,UAAU,uDAAsD,uBAIvE,2BACE,sBAAIA,UAAU,gBACXH,EAAMM,KAAKC,GACV,sBACEC,IAAKD,EAAKvB,MACVmB,UAAU,yCAEV,gBAAC,EAAAC,KAAI,CAACC,GAAIE,EAAKN,MAAOM,EAAKvB,aAMrC,wBAAMmB,UAAU,uEACbD,GAEH,+BACC,C,+CCVP,IApBY,IAA6B,IAA5B,MAAElB,EAAK,YAAEyB,GAAa,EAClC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAW3B,OACE,gCACE,6BAAQ3B,EAAM,MAAI0B,EAAKE,KAAKC,aAAa7B,OAC5C,wBAAM8B,KAAK,cAAcC,QAAU,GAAEL,EAAKE,KAAKC,aAAaJ,gBAAgBA,MACxE,C,4GCdP,MA+DaO,EAAO,IAAM,gBAAC,IAAG,CAAChC,MAAM,UAErC,UAjEkB,IAAe,IAAd,KAAE0B,GAAM,EACzB,MAAMO,EAAQP,EAAKQ,OAAOC,MAE1B,OACE,gBAAC,IAAM,KACJF,EAAMX,KAAKc,GAER,uBAAKZ,IAAKY,EAAIxB,GAAIO,UAAU,yBAC1B,uBAAKA,UAAU,wBACZiB,EAAIC,YAAYC,MACfF,EAAIC,YAAYC,KAAKhB,KAAKiB,GAEtB,uBACEf,IAAKe,EACLpB,UAAU,sCACX,IACGoB,MAKZ,gBAAC,EAAAnB,KAAI,CACHD,UAAU,gCACVE,GAAK,UAASe,EAAIC,YAAYG,QAE9B,sBAAIrB,UAAU,gEACXiB,EAAIC,YAAYrC,OAElBoC,EAAIC,YAAYZ,aACf,uBAAKN,UAAU,kBACZiB,EAAIC,YAAYZ,aAGrB,2BAAMW,EAAIC,YAAYI,UAK9B,uBAAKtB,UAAU,QACR,C","sources":["webpack://kwonjongseong-blog/./node_modules/@heroicons/react/24/outline/esm/HomeIcon.js","webpack://kwonjongseong-blog/./src/components/Layout.js","webpack://kwonjongseong-blog/./src/components/Seo.js","webpack://kwonjongseong-blog/./src/pages/posts/index.js"],"sourcesContent":["import * as React from \"react\";\nfunction HomeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n  }));\n}\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;","import React from \"react\";\nimport { HomeIcon } from \"@heroicons/react/24/outline\";\nimport { Link } from \"gatsby\";\n\nconst menus = [{ title: \"posts\", path: \"/\" }];\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <header className=\"flex justify-between sm:w-full md:w-[768px] m-auto px-4 py-4\">\n        <Link className=\"flex\" to=\"/\">\n          <HomeIcon className=\"w-8 h-8 align-middle text-violet-900 mr-1\" />\n          <div className=\"font-semibold text-2xl align-middle text-violet-900\">\n            Kwonjongseong Blog\n          </div>\n        </Link>\n        <nav>\n          <ul className=\"flex gap-x-2\">\n            {menus.map((item) => (\n              <li\n                key={item.title}\n                className=\"font-semibold text-xl text-violet-900\"\n              >\n                <Link to={item.path}>{item.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </header>\n      <main className=\"flex flex-col gap-y-14 sm:w-full md:w-[768px] mt-3 m-auto px-4 py-4\">\n        {children}\n      </main>\n      <footer></footer>\n    </>\n  )\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ title, description }) => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n  return (\n    <>\n      <title>{title} | {data.site.siteMetadata.title}</title>\n\t\t\t<meta name=\"description\" content={`${data.site.siteMetadata.description}, ${description}`} />\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMdx.nodes;\n\n  return (\n    <Layout>\n      {posts.map((mdx) => {\n        return (\n          <div key={mdx.id} className=\"flex flex-col gap-y-1\">\n            <div className=\"flex gap-x-2 text-sm\">\n              {mdx.frontmatter.tags &&\n                mdx.frontmatter.tags.map((tag) => {\n                  return (\n                    <div\n                      key={tag}\n                      className=\"rounded-lg px-2 py-1 bg-violet-200\"\n                    >\n                      #{tag}\n                    </div>\n                  );\n                })}\n            </div>\n            <Link\n              className=\"group flex flex-col gap-y-0.5\"\n              to={`/posts/${mdx.frontmatter.slug}`}\n            >\n              <h2 className=\"text-xl group-hover:underline group-hover:underline-offset-4\">\n                {mdx.frontmatter.title}\n              </h2>\n              {mdx.frontmatter.description && (\n                <div className=\"text-slate-500\">\n                  {mdx.frontmatter.description}\n                </div>\n              )}\n              <div>{mdx.frontmatter.date}</div>\n            </Link>\n          </div>\n        );\n      })}\n      <div className=\"snb\"></div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query MyQuery {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { internal: { contentFilePath: { regex: \"/src/posts/\" } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n          slug\n          tags\n        }\n        id\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"posts\" />\n\nexport default IndexPage;\n"],"names":["title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","menus","path","children","className","Link","to","map","item","key","description","data","useStaticQuery","site","siteMetadata","name","content","Head","posts","allMdx","nodes","mdx","frontmatter","tags","tag","slug","date"],"sourceRoot":""}