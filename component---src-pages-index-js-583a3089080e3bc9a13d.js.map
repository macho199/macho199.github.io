{"version":3,"file":"component---src-pages-index-js-583a3089080e3bc9a13d.js","mappings":"2KAyBA,MADmB,cAvBnB,UAAkB,MAChBA,EAAK,QACLC,KACGC,GACFC,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKR,EACL,kBAAmBF,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DY,GAAIX,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDa,cAAe,QACfC,eAAgB,QAChBC,EAAG,+OAEP,I,UCnBA,MAAMC,EAAQ,CAAC,CAAEhB,MAAO,QAASiB,KAAM,MA8BvC,MA5Be,IAAmB,IAAlB,SAAEC,GAAU,EAC1B,OACE,gCACE,0BAAQC,UAAU,gEAChB,gBAAC,EAAAC,KAAI,CAACD,UAAU,OAAOE,GAAG,KACxB,gBAAC,EAAQ,CAACF,UAAU,8CACpB,uBAAKA,UAAU,mDAAkD,uBAInE,2BACE,sBAAIA,UAAU,gBACXH,EAAMM,KAAKC,GACV,sBAAIC,IAAKD,EAAKvB,MAAOmB,UAAU,qCAC7B,gBAAC,EAAAC,KAAI,CAACC,GAAIE,EAAKN,MAAOM,EAAKvB,aAMrC,wBAAMmB,UAAU,uEACbD,GAEH,+BACC,C,+CCPP,IApBY,IAA6B,IAA5B,MAAElB,EAAK,YAAEyB,GAAa,EAClC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAW5B,OACC,gCACC,6BAAQ3B,EAAM,MAAI0B,EAAKE,KAAKC,aAAa7B,OACzC,wBAAM8B,KAAK,cAAcC,QAAU,GAAEL,EAAKE,KAAKC,aAAaJ,gBAAgBA,MAC1E,C,6GCdL,MAyDaO,EAAO,IAAM,gBAAC,IAAG,CAAChC,MAAM,SAErC,UA3DkB,IAAe,IAAd,KAAE0B,GAAM,EACzB,MAAMO,EAAQP,EAAKQ,OAAOC,MAE1B,OACE,gBAAC,IAAM,KACJF,EAAMX,KAAKc,GAER,uBAAKZ,IAAKY,EAAIxB,GAAIO,UAAU,yBAC1B,uBAAKA,UAAU,wBACZiB,EAAIC,YAAYC,MACfF,EAAIC,YAAYC,KAAKhB,KAAKiB,GAEtB,uBAAKf,IAAKe,EAAKpB,UAAU,sCAAqC,IAC1DoB,MAKZ,gBAAC,EAAAnB,KAAI,CAACD,UAAU,gCAAgCE,GAAK,UAASe,EAAIC,YAAYG,QAC5E,sBAAIrB,UAAU,2EACXiB,EAAIC,YAAYrC,OAElBoC,EAAIC,YAAYZ,aACf,uBAAKN,UAAU,4BACZiB,EAAIC,YAAYZ,aAGrB,uBAAKN,UAAU,aAAaiB,EAAIC,YAAYI,UAKpD,uBAAKtB,UAAU,QACR,C","sources":["webpack://kwonjongseong-blog/./node_modules/@heroicons/react/24/outline/esm/HomeIcon.js","webpack://kwonjongseong-blog/./src/components/Layout.js","webpack://kwonjongseong-blog/./src/components/Seo.js","webpack://kwonjongseong-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nfunction HomeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n  }));\n}\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;","import React from \"react\";\r\nimport { HomeIcon } from \"@heroicons/react/24/outline\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst menus = [{ title: \"posts\", path: \"/\" }];\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <header className=\"flex justify-between sm:w-full md:w-[768px] m-auto px-4 py-4\">\r\n        <Link className=\"flex\" to=\"/\">\r\n          <HomeIcon className=\"w-8 h-8 align-middle text-violet-900 mr-1\" />\r\n          <div className=\"font-bold text-2xl align-middle text-violet-900\">\r\n            Kwonjongseong Blog\r\n          </div>\r\n        </Link>\r\n        <nav>\r\n          <ul className=\"flex gap-x-2\">\r\n            {menus.map((item) => (\r\n              <li key={item.title} className=\"font-bold text-xl text-violet-900\">\r\n                <Link to={item.path}>{item.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main className=\"flex flex-col gap-y-14 sm:w-full md:w-[768px] mt-3 m-auto px-4 py-4\">\r\n        {children}\r\n      </main>\r\n      <footer></footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst Seo = ({ title, description }) => {\r\n\tconst data = useStaticQuery(graphql`\r\n\t\tquery {\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tdescription\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<title>{title} | {data.site.siteMetadata.title}</title>\r\n\t\t\t<meta name=\"description\" content={`${data.site.siteMetadata.description}, ${description}`} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Seo;\r\n","import * as React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Seo from \"../components/Seo\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const posts = data.allMdx.nodes;\r\n\r\n  return (\r\n    <Layout>\r\n      {posts.map((mdx) => {\r\n        return (\r\n          <div key={mdx.id} className=\"flex flex-col gap-y-1\">\r\n            <div className=\"flex gap-x-2 text-sm\">\r\n              {mdx.frontmatter.tags &&\r\n                mdx.frontmatter.tags.map((tag) => {\r\n                  return (\r\n                    <div key={tag} className=\"rounded-lg px-2 py-1 bg-violet-200\">\r\n                      #{tag}\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            <Link className=\"group flex flex-col gap-y-0.5\" to={`/posts/${mdx.frontmatter.slug}`}>\r\n              <h2 className=\"text-2xl font-bold group-hover:underline group-hover:underline-offset-4\">\r\n                {mdx.frontmatter.title}\r\n              </h2>\r\n              {mdx.frontmatter.description && (\r\n                <div className=\"text-base text-slate-500\">\r\n                  {mdx.frontmatter.description}\r\n                </div>\r\n              )}\r\n              <div className=\"text-base\">{mdx.frontmatter.date}</div>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"snb\"></div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allMdx(\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { internal: { contentFilePath: { regex: \"/src/posts/\" } } }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"MMMM D, YYYY\")\r\n          title\r\n          description\r\n          slug\r\n          tags\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage;\r\n"],"names":["title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","menus","path","children","className","Link","to","map","item","key","description","data","useStaticQuery","site","siteMetadata","name","content","Head","posts","allMdx","nodes","mdx","frontmatter","tags","tag","slug","date"],"sourceRoot":""}