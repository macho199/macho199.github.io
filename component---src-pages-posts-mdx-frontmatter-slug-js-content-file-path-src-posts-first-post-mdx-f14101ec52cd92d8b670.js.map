{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-js-content-file-path-src-posts-first-post-mdx-f14101ec52cd92d8b670.js","mappings":"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","sources":["webpack://kwonjongseong-blog/./src/posts/first-post.mdx","webpack://kwonjongseong-blog/./src/pages/posts/{mdx.frontmatter__slug}.js","webpack://kwonjongseong-blog/./node_modules/@heroicons/react/24/outline/esm/HomeIcon.js","webpack://kwonjongseong-blog/./src/components/Layout.js","webpack://kwonjongseong-blog/./src/components/PostMdxProvider.js","webpack://kwonjongseong-blog/./src/components/Seo.js","webpack://kwonjongseong-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Gatsbyjs 로 블로그 만들기\"), \"\\n\", React.createElement(_components.p, null, \"안녕하세요.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kjs/Workspace/NodeWorkspace/kwonjongseong-blog/src/posts/first-post.mdx\";\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport {graphql} from \"gatsby\";\nimport PostMDXProvider from \"../../components/PostMdxProvider\";\nimport Seo from \"../../components/Seo\";\nconst PostPage = ({children}) => {\n  return React.createElement(Layout, null, React.createElement(PostMDXProvider, null, children));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        tags\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => {\n  const tags = data.mdx.frontmatter.tags.join(\", \");\n  return React.createElement(Seo, {\n    title: `${data.mdx.frontmatter.title} | posts`,\n    description: tags\n  });\n};\nPostPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\";\nfunction HomeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n  }));\n}\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;","import React from \"react\";\nimport { HomeIcon } from \"@heroicons/react/24/outline\";\nimport { Link } from \"gatsby\";\n\nconst menus = [{ title: \"posts\", path: \"/\" }];\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <header className=\"flex justify-between sm:w-full md:w-[768px] m-auto px-4 py-4\">\n        <Link className=\"flex\" to=\"/\">\n          <HomeIcon className=\"w-8 h-8 align-middle text-violet-900 mr-1\" />\n          <div className=\"font-semibold text-2xl align-middle text-violet-900\">\n            Kwonjongseong Blog\n          </div>\n        </Link>\n        <nav>\n          <ul className=\"flex gap-x-2\">\n            {menus.map((item) => (\n              <li\n                key={item.title}\n                className=\"font-semibold text-xl text-violet-900\"\n              >\n                <Link to={item.path}>{item.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </header>\n      <main className=\"flex flex-col gap-y-14 sm:w-full md:w-[768px] mt-3 m-auto px-4 py-4\">\n        {children}\n      </main>\n      <footer></footer>\n    </>\n  )\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\nconst components = {\n  h1: props => <h1 className=\"text-4xl text-violet-900 font-bold\" {...props} />,\n  h2: props => <h2 className=\"text-3xl text-violet-900 font-semibold\" {...props} />,\n  h3: props => <h3 className=\"text-2xl text-violet-900 font-semibold\" {...props} />,\n  blockquote: props => <blockquote className=\"text-sm border-violet-500 border-l-2 pl-4 pt-1 pb-1\" {...props} />,\n  a: props => <a className=\"border-b-2 border-violet-300 hover:border-violet-700 text-violet-500\" {...props} />,\n  hr: props => <hr className=\"border-violet-400\" {...props} />,\n  ul: props => <ul className=\"list-disc list-inside\" {...props} />,\n  ol: props => <ol className=\"list-decimal list-inside\" {...props} />\n}\n\nconst PostMDXProvider = ({ children }) => {\n    return <MDXProvider components={components}>{children}</MDXProvider>\n}\n\nexport default PostMDXProvider","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ title, description }) => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n  return (\n    <>\n      <title>{title} | {data.site.siteMetadata.title}</title>\n\t\t\t<meta name=\"description\" content={`${data.site.siteMetadata.description}, ${description}`} />\n    </>\n  );\n};\n\nexport default Seo;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","_provideComponents","components","React","wrapper","MDXLayout","PostPage","_ref","children","Layout","PostMDXProvider","Head","_ref2","data","tags","mdx","frontmatter","join","Seo","title","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","titleId","svgRef","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","menus","path","className","Link","to","map","item","key","h2","h3","blockquote","a","hr","ul","ol","useStaticQuery","site","siteMetadata","name","content","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}